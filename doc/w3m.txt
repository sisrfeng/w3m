*w3m.vim* Embed w3m text browser in a vim buffer

================================================================================
CONTENTS                            *W3mContents*

    1. Introduction.................|W3mIntro|
    1. Requirements.................|W3mRequirements|
    2. Usage........................|W3mUsage|
    3. Buffer Commands..............|W3mBuffer|
    4. Settings.....................|W3mSettings|
    5. Forking Notes................|W3mForkNotes|


================================================================================
1. INTRODUCTION                                *W3mIntro*


Description~
-----------

    w3m.vim is a plugin for vim that uses w3m to search in vim.
    The obvious use case is to integrate online search with your writing process.
    This avoids conceptual context switching,
    and allows vim copy and paste between search results and your documents.

This version is forked from the original (and solid) plugin
https://github.com/yuratomo/w3m.vim

================================================================================
2. REQUIREMENTS                                *W3mRequirements*

w3m.vim requires [w3m](http://w3m.sourceforge.net/) to be installed.

If w3m is not in your $PATH, you can specify its location in
your vimrc file.

    let g:w3m#command = 'C:\w3m.exe'

================================================================================
3. USAGE                                       *W3mUsage*

Open URL:

    :WW3m [url or keyword]

Search Mode:

    |:WW3m| search-engine-name    search words

    [search-engine-name]
    frog
    go               : Go language
    google           : Google
    man              : man
    msdn             : MSDN
    perl             : PERL
    php              : PHP
    python           : Python
    ruby             : Ruby
    wikipedia        : Wikipedia
    yahoo            : Yahoo
    yahoodict        : Yahoo dictionary
    ✌local✌            : Local HTML file

Open URL At New Tab

    |:TW3m| [url or keyword]

Open URL At Split Window:

    |:SW3m| [url or keyword]

Open URL At Vertical Split Window:

    |:VW3m| [url or keyword]

Open Local Html File

    |:W3mLocal| local html-file-path

================================================================================
4. BUFFER COMMANDS                             *W3mBuffer*

This is the first change I've made to upstream
The (standard) practice of uniform command prefixes seems over strict when
applied to buffer local Commands, where the chance of overlap is small,
and the default is sensibly to the buffer local Command.
This make the commands considerably easier to type and more intuitive.

Close:

    :Close
    or
    :bd

Copy URL To Clipboard

    :CopyUrl

Reload Current Page

    :Reload

Change Url:

    :AddressBar

Show External Browser:

    :ShowExtenalBrowser

Syntax Off:

    :SyntaxOff

Syntax On:

    :SyntaxOn

Change User-Agent

    :SetUserAgent (w3m|Chrome|Firefox|IE6|IE7|IE8|IE9|Opera|Android|iOS|KDDI|DoCoMo|SoftBank)

Open from history:

    :History

Clear history:

    :HistoryClear


================================================================================
5. SETTINGS                                    *W3mSettings*
--------

Syntax highlighting:

    highlight! link w3mLink      Function
    highlight! link w3mLinkHover SpecialKey
    highlight! link w3mSubmit    Special
    highlight! link w3mInput     String
    highlight! link w3mBold      Comment
    highlight! link w3mUnderline Underlined
    highlight! link w3mHitAHint  Question
    highlight! link w3mAnchor    Label

Use Proxy:

    let &HTTP_PROXY='http://xxx.xxx/:8080'

Set External Browser:

    let g:w3m#external_browser = 'chrome'

Set Home Page


    let g:w3m#homepage = "http://www.google.co.jp/"

Specify Key Of Hit-A-Hint

    let g:w3m#hit_a_hint_key = 'f'

Specify Default Search Engine:

    let g:w3m#search_engine =
        \ 'http://search.yahoo.co.jp/search?search.x=1&fr=top_ga1_sa_124&tid=top_ga1_sa_124&ei=' . &encoding . '&aq=&oq=&p='

Disable Default Keymap

You set as follows if you do not want to use default keymap.

    let g:w3m#disable_default_keymap = 1

Disable Vimproc

You set as follows if you do not want to use vimproc.

    let g:w3m#disable_vimproc = 1

Toggle Link Hovering

By default links under the curosr are highlighted. Turn off with one of the following

    unlet g:w3m#set_hover_on
    let g:w3m#hover_set_on = -1
    " a value less than or equal to 0 will turn it off

    " set delay time until highlighting
    let g:w3m#hover_delay_time = 100

Search Engine Localization

Search engines are loaded from `autoload/w3m/search_engines/YOUR_LOCALE/`,
and then from the "global" locale unless a localized search engine of the same name exists.
Your locale defaults to `v:lang`,
which vim sets based on your `$LANG` environment variable.`

To specify a custom locale for loading search engines:

    let g:w3m#lang = 'en_US'


Specify path to history file

    let g:w3m#history#save_file = $HOME.'/.vim_w3m_hist'

Disable 80 char wrapping and wrap to window size

    let g:w3m#allow_long_lines = 1

Default Keymaps
---------------
* <CR>      Open link under the cursor.
* <S-CR>    Open link under the cursor (with new tab).
* <TAB>     Move cursor next link.
* <s-TAB>   Move cursor previous link.
* <Space>   Scroll down.
* <S-Space> Scroll up.
* <BS>      Back page.
* <A-LEFT>  Back page.
* <A-RIGHT> Forward page.
* =         Show href under the cursor.
* f         Hit-A-Hint.
* s         Toggle Syntax On/Off.
* c         Toggle Cookie On/Off.
* <M-D>     Edit current url.


==============================================================================
6. FORKING NOTE                                     *W3mForkNotes*

    I've forked this from https://github.com/yuratomo/w3m.vim It's a really solid w3m wrapper (and seems heavily influenced by the emacs package).
    But it's showing it's age,
    without update for a decade.

Basic fixes to original package:

* cleanup of some of the search engine definitions
* add frogsearch (frog) and made it the default search

But I've also modified behavior

* I've capped columns to 80 for readability.
  This can be disabled if  desired.
* I've altered the command naming.
  using T/V/S prefixes on the W3m namespace.
  I'm following Tim Popes precedent,
  so I believe I'm in good company :-) This is in part to make the vertical split invocation easier to type,
  and conceptually maps standard vim conventions.
  I am also motivated by the awkwardness of the shifted W followed by the reach to 3,
  and prefer to stay closer to home row.
  I personally tend to leveraging <Tab> completion,
  which typically needs two characters to trigger,
  and adding the prefix orientation makes that easier to type.

vim:tw=78:ts=8:ft=help:norl:
DIY_2  vim:filetype=help:syntax=help:
